from datetime import datetime
from pathlib import Path
from typing import Any

__all__: list[str] = [
    "append_gitignore",
]


def append_gitignore(
    out_file: str = ".gitignore", options: list[Any] = [], **kwargs: Any
) -> Path:
    """Simple function to append to a gitignore and create one if it doesn't exist."""

    gitignore = Path(out_file)

    if not options:
        return gitignore

    _write_file(gitignore, "w" if not gitignore.exists() else "a", options, **kwargs)

    return gitignore


def _write_file(file: Path, mode: str, options: list[str], **kwargs: Any) -> None:
    header = (
        "# Autogenerated .gitignore file (through Light's automated encode tooling)\n"
        + f"# Generated at {str(datetime.now())[:-7]} ({datetime.now().astimezone().tzname()})\n\n"
    )

    new_options: list[str] = []

    if file.exists():
        with open(file, "r", **kwargs) as f:
            content = f.readlines()

            for option in options:
                option = str(option)

                if any(
                    opt in content for opt in (option, Path(option).with_stem("*").name)
                ):
                    new_options += [option]
    else:
        new_options = options

    if not new_options:
        return

    with open(file, mode, **kwargs) as f:
        if mode == "w":
            f.write(header)

        f.write("\n".join([str(option) for option in new_options]) + "\n")
